<?php

/**
 * Implements hook_help().
 */
function acquia_connector_help($path, $arg) {
  switch ($path) {
    case 'admin/help#acquia_connector':
      $output = '<h2>' . t('Acquia Connector module') . '</h2>';
      $output .= '<p>' . t("The Acquia Network Connector suite of modules allow you to connect your site to the Acquia Network and use its variety of services.") . '<p>';
      $output .= '<p>' . t("<a href='!url'>Read more about the installation and use of the Acquia Network Connector module on the Acquia Library</a>.", array('!url' => url('https://docs.acquia.com/network/install/connector', array('external' => TRUE)))) . '</p>';
      $output .= '<dl>';
      $output .= '<dt>Acquia Agent</dt>';
      $output .= '<dd>' . t('Enables secure communication between your Drupal sites and the Acquia Network.') . '</dt>';
      $output .= '<dt>Acquia SPI</dt>';
      $output .= '<dd>' . t('Automates the collection of site information. Required for use with the Acquia Insight service.') . '</dt>';
      $output .= '<dt>Acquia SPI Custom Tests</dt>';
      $output .= '<dd>' . t('Acquia Insight supports custom tests for your site. See <strong>acquia_spi.api.php</strong> for information on the custom test hook and validate your tests for inclusion in outgoing SPI data with the Drush command, <strong>spi-test-validate</strong>.') . '</dt>';
      $output .= '<dt>Acquia Search</dt>';
      $output .= '<dd>' . t('Provides authentication service to the Apache Solr Search Integration module to enable use of Acquia\'s hosted Solr search indexes.') . '</dt>';
      $output .= '</dl>';
      $output .= '<h3>' . t('Configuration settings') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Data collection and examination') . '</dt>';
      $output .= '<dd>' . t('Upon cron (or if configured to run manually) information about your site will be sent and analyzed as part of the Acquia Insight service. You can optionally exclude information about admin privileges, content and user count, and watchdog logs.');
      $output .= '<dt>' . t('Source code analysis') . '</dt>';
      $output .= '<dd>' . t('If your site supports external SSL connections, Acquia Insight will examine the source code of your site to detect alterations and provide code diffs and update recommentations.');
      $output .= '<dt>' . t('Receive updates from Acquia Network') . '</dt>';
      $output .= '<dd>' . t('Receive dynamic updates on the Network Settings page from Acquia.com about your subscription and new features.') . '</dd>';
      $output .= '<dt>' . t('Allow Insight to update list of approved variables.') . '</dt>';
      $output .= '<dd>' . t('As part of the Acquia Insight service, some variables can be corrected to their recommended settings from within the Insight system. The list of variables that can be corrected can also be updated at your discretion.') . '</dd>';
      $output .= '</dl>';

      return $output;
  }
}

/**
 * Implements hook_cron().
 */
function acquia_connector_cron() {
  // Check subscription and send a heartbeat to Acquia Network via XML-RPC.
  acquia_agent_check_subscription();

  $config = \Drupal::config('acquia_connector.settings');

  // Get the last time we processed data.
  $last = \Drupal::state('acquia_connector.cron_last', 0);

  // 30 minute interval for sending site profile.
  $interval = $config->get('cron_interval');

  // Determine if the required interval has passed.
  if ($config->get('use_cron') && ((REQUEST_TIME - $last) > ($interval * 60))) {
    $ret = acquia_connector_send_full_spi(ACQUIA_SPI_METHOD_CRON);
  }
}

/**
 * Gather full SPI data and send to Acquia Network.
 *
 * @param string $method Optional identifier for the method initiating request.
 *   Values could be 'cron' or 'menu callback' or 'drush'.
 * @return mixed FALSE if data not sent else NSPI result array
 */
function acquia_connector_send_full_spi($method = '') {
  $spi = acquia_spi_get();

  if (!empty($method)) {
    $spi['send_method'] = $method;
  }

  $result = acquia_spi_send_data($spi);

  if ($result === FALSE) {
    return FALSE;
  }

  acquia_spi_handle_server_response($result);

  \Drupal::state()->set('acquia_connector.cron_last', REQUEST_TIME);

  return $result;
}
